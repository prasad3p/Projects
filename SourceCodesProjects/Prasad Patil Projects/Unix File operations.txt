
/*
#############################################################################################################
UNIX file operations:::

To develop a program that performs some of the basic file operations similar to UNIX commands.
The prgram first identifies the operation to be performed from the code entered as a command line argument 
and then perform the operation, on the data from the inout file.

(Codes- operations)
0- Copy, 1- Intervleaving, 2- More, 3- grep, 4- word count
##############################################################################################################
*/




#include<stdio.h>
#include<string.h>
#include<stdlib.h>
void printLines(FILE *file1,int num)
{
        int count=1;
        char ch;
        while((fscanf(file1,"%c",&ch)!=EOF) && (count<=num))
        {
                if(ch=='\n')
                        count++;
                printf("%c",ch);
        }
        if(fscanf(file1,"%c",&ch)==EOF)
        {
                printf("\nReached end of the file.\n");
                exit(1);
        }
}

main(int argc, char *argv[])
{
        //Checking for correct operation code and correct number of arguments.
        if((argv[1][0]=='0'||argv[1][0]=='1'||argv[1][0]=='2'||argv[1][0]=='3'||argv[1][0]=='4')&& argc<=5 && argc>=3)
        {
                //Implementation of cp command.
                //Enter if operation code is 0.
                if(argv[1][0]=='0')
                {
                        if(argc!=4)
                        {
                                printf("\nIncorrect number of arguments\n");
                                exit(1);
                        }
                        FILE *file1;
                        file1=fopen(argv[2],"r");
                        //Check if file1.txt is opened or filename is correct.
                        if(!file1)
                        {
                                printf("\nFile error! Could not open %s",argv[2]);
                                exit(1);
                        }

                        FILE *file2;
                        file2=fopen(argv[3],"w");
                        //Check if file2.txt is opened or filename is correct.
                        if(!file2)
                        {
                                printf("\nFile error! Could not open %s",argv[3]);
                                exit(1);
                        }

                        //Read file content from file1.txt and put it to file2.txt.
                        char ch;
                        while(fscanf(file1,"%c",&ch)!=EOF)
                        {
                                fprintf(file2,"%c",ch);
                        }

                        //Close both the files.
                        fclose(file1);
                        fclose(file2);
                }

                //Implementation of file interleaving.
                if(argv[1][0]=='1')
                {
                        if(argc!=5)
                        {
                                printf("\nIncorrect number of arguments\n");
                                exit(1);
                        }
                        FILE *file1;
                        file1=fopen(argv[2],"r");
                        //Check if file1.txt is opened or filename is correct.
                        if(!file1)
                        {
                                printf("\nFile error! Could not open %s",argv[2]);
                                exit(1);
                        }

                        FILE *file2;
                        file2=fopen(argv[3],"r");
                        //Check if file2.txt is opened or filename is correct.
                        if(!file2)
                        {
                                printf("\nFile error! Could not open %s",argv[3]);
                                exit(1);
                        }

                        FILE *file3;
                        file3=fopen(argv[4],"w");
                        //Check if file3.txt is opened or filename is correct.
                        if(!file3)
                        {
                                printf("\nFile error! Could not open %s",argv[4]);
                                exit(1);
                        }
                        char ch1,ch2;

                        while(fscanf(file1,"%c",&ch1)!=EOF || fscanf(file2,"%c",&ch2)!=EOF)
                        {
                                if(ch1=='\n')
                                {
                                        fprintf(file3,"%c",'\n');
                                        while(fscanf(file2,"%c",&ch2)!=EOF)
                                        {
                                                if(ch2=='\n')
                                                {
                                                        break;
                                                }

                                                fprintf(file3,"%c",ch2);
                                        }
                                }
                                fprintf(file3,"%c",ch1);
                        }
                        fclose(file1);
                        fclose(file2);
                        fclose(file3);
                }

                //Implementation of more command.
                if(argv[1][0]=='2')
                {
                        if(argc!=3)
                        {
                                printf("\nIncorrect number of arguments\n");
                                exit(1);
                        }
                        FILE *file1;
                        file1=fopen(argv[2],"r");
                        //Check if file is opened or filename is correct.
                        if(!file1)
                        {
                                printf("\nFile error! Could not open %s",argv[2]);
                                exit(1);
                        }

                        //Print first 10 lines.
                        printLines(file1,10);

                        //Print other lines based on user's choice
                        while(1)
                        {
                                char choice=NULL;
                                printf("\nEnter:\n'n' to print next line.\n'p' to print next 10 lines.\n'q' to quit.\n:");
                                choice=getchar();
                                if(choice=='n')
                                {
                                        //Print single line if choice is n.
                                        printLines(file1,1);
                                }
                                if(choice=='p')
                                {
                                        //Print first 10 lines if choice is p.
                                        printLines(file1,10);
                                }
                                if(choice=='q')
                                {
                                        //Exit the program if choice is q.
                                        fclose(file1);
                                        exit(1);
                                }
                        }
                }

                //Implementation of grep command.
                if(argv[1][0]=='3')
                {
                        //Check for correct number of arguments.
                        if(argc!=3)
                        {
                                printf("\nIncorrect number of arguments\n");
                                exit(1);
                        }

                        FILE *file1;
                        file1=fopen(argv[2],"r");
                        //Check if filename exists.
                        if(!file1)
                        {
                                printf("\nIncorrect filename\n");
                                exit(1);
                        }

                        char word[20];
                        char str[200];
                        printf("\nEnter a word:");
                        scanf("%s",&word);

                        //Read file linewise.
                        while(fgets(str,100,file1)!=NULL)
                        {
                                //Check the word if it exists in the curtent line. Print the line if it finds the word in the line.
                                if(strstr(str,word)!=NULL)
                                {
                                        printf("\n%s",&str);
                                }
                        }
                        fclose(file1);

                }

                //Implementation of wc command.
                if(argv[1][0]=='4')
                {
                        //Check for correct number of arguments.
                        if(argc!=3)
                        {
                                printf("\nIncorrect number of arguments\n");
                                exit(1);
                        }

                        FILE *file1,*file2,*file3;
                        file1=fopen(argv[2],"r");

                        //Check if file entered exists.
                        if(!file1)
                        {
                                printf("\nIncorrect filename\n");
                                exit(1);
                        }

                        char ch;
                        int charCount=0;
                        int wordCount=0;
                        int lineCount=0;
                        while((ch=fgetc(file1))!=EOF)
                        {
                                if(ch=='\n')
                                {
                                        lineCount++;
                                }
                                if(isspace(ch)||ch=='\t'||ch=='\n')
                                {
                                        wordCount++;

                                }
                                charCount++;
                        }
                        printf("\nNumber of lines in the file are:%d\n",lineCount);
                        printf("\nNumber of characters in the file are:%d\n",charCount);
                        printf("\nNumber of words in the file are:%d\n",wordCount);
                        fclose(file1);

                        file2=fopen(argv[2],"r");
                        int smallLine=50000;
                        char smLine[500];
                        char smLine2[500];
                        char getLine[500];
                        int currentLineCount=0;
                        int minWordCount=200;
                        int currWordCount=0;
                        while(fgets(getLine,500,file2)!=NULL)
                        {
                                currentLineCount=strlen(getLine);
                                if(currentLineCount<smallLine)
                                {
                                        smallLine=currentLineCount;
                                        strcpy(smLine,getLine);
                                }
                                int i=0;
                                while(i<strlen(getLine))
                                {
                                        if(getLine[i]=='\t' || getLine[i]=='\n' || isspace(getLine[i]))
                                        {
                                                currWordCount++;
                                        }
                                        i++;
                                }
                                if(currWordCount<minWordCount)
                                {
                                        strcpy(smLine2,getLine);
                                        minWordCount=currWordCount;
                                }
                                currWordCount=0;
                        }
                        printf("\nShortest line in terms of words: %s\n",smLine2);
                        printf("\nSmallest line in terms of characters: %s\n",smLine);
                        fclose(file2);

                        char w;
                        char currWord[100];
                        char firstLargestWord[100]="a";
                        char temp1[100];
                        char secLargestWord[100]="b";
                        char temp2[100];
                        char thirdLargestWord[100]="c";
                        file3=fopen(argv[2],"r");
                        while(w!=EOF)
                        {
                                w=fscanf(file3,"%s",currWord);
                                if(strlen(currWord)>strlen(firstLargestWord))
                                {
                                        strcpy(temp1,firstLargestWord);
                                        strcpy(temp2,secLargestWord);
                                        strcpy(firstLargestWord,currWord);
                                        strcpy(secLargestWord,temp1);
                                        strcpy(thirdLargestWord,temp2);
                                }
                                else if(strlen(currWord)>strlen(secLargestWord))
                                {
                                        strcpy(temp2,secLargestWord);
                                        strcpy(secLargestWord,currWord);
                                        strcpy(thirdLargestWord,temp2);
                                }
                                else if(strlen(currWord)>strlen(thirdLargestWord))
                                {
                                        strcpy(thirdLargestWord,currWord);
                                }
                                else
                                {
                                        continue;
                                }
                        }
                        printf("\nFirst logest word: %s\n",firstLargestWord);
                        printf("\nSecond longest word: %s\n",secLargestWord);
                        printf("\nThird longest word: %s\n",thirdLargestWord);
                        fclose(file3);
                }

        }
        else
        {
                printf("\nIncorrect Arguments");
        }
}

